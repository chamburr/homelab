---
- name: Get vms
  community.libvirt.virt:
    command: list_vms
  register: kubernetes_all_vms

- name: Download vm image
  ansible.builtin.get_url:
    url: "{{ kubernetes_vm_image }}"
    dest: /var/lib/libvirt/images/install.iso
    mode: 0644
  when: kubernetes_all_vms.list_vms | length == 0

- name: Create vms
  ansible.builtin.shell: # noqa: no-changed-when
    cmd: |
      virt-install --name={{ item }} \
        --cpu=host --vcpus={{ kubernetes_vm_cpu }} --ram={{ kubernetes_vm_ram }} \
        --os-type=linux --os-variant=generic \
        --cdrom=/var/lib/libvirt/images/install.iso \
        --disk=pool=default,size={{ kubernetes_vm_disk }} \
        --disk=vol=default/{{ kubernetes_volume_name }},cache=none,io=native,perms=sh \
        --network=network={{ kubernetes_network_name }},model=virtio \
        --graphics=none --noautoconsole --autostart
  loop: "{{ kubernetes_vms }}"
  when: kubernetes_all_vms.list_vms | length == 0

- name: Detach vm image
  ansible.builtin.command: # noqa: no-changed-when
    cmd: virsh detach-disk {{ item }} hdc --config
  loop: "{{ kubernetes_vms }}"
  when: kubernetes_all_vms.list_vms | length == 0

- name: Delete vm image
  ansible.builtin.command: # noqa: no-changed-when
    cmd: virsh vol-delete --pool default install.iso
  when: kubernetes_all_vms.list_vms | length == 0

- name: Wait for vm installation
  ansible.builtin.pause:
    seconds: 30
  when: kubernetes_all_vms.list_vms | length == 0
