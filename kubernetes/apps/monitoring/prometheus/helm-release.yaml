---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 45.31.0
      sourceRef:
        kind: HelmRepository
        name: prometheus
        namespace: flux-system
  dependsOn:
    - name: thanos
      namespace: monitoring
  install:
    crds: Skip
    remediation:
      retries: 3
  upgrade:
    crds: Skip
    remediation:
      retries: 3
  values:
    nameOverride: prometheus
    fullnameOverride: prometheus
    defaultRules:
      create: false
    alertmanager:
      enabled: false
    grafana:
      enabled: false
    kubeControllerManager:
      service:
        selector:
          k8s-app: kube-controller-manager
    kubeEtcd:
      service:
        port: 2379
        targetPort: 2379
        selector:
          k8s-app: kube-apiserver
      serviceMonitor:
        scheme: https
        caFile: /etc/prometheus/secrets/etcd-client-cert/ca.crt
        certFile: /etc/prometheus/secrets/etcd-client-cert/admin.crt
        keyFile: /etc/prometheus/secrets/etcd-client-cert/admin.key
    kubeScheduler:
      service:
        selector:
          k8s-app: kube-scheduler
    kube-state-metrics:
      nameOverride: prometheus-state-metrics
      fullnameOverride: prometheus-state-metrics
    prometheus-node-exporter:
      nameOverride: prometheus-node-exporter
      fullnameOverride: prometheus-node-exporter
    prometheusOperator:
      admissionWebhooks:
        enabled: false
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 0
            memory: 0
          limits:
            cpu: 0
            memory: 0
    prometheus:
      prometheusSpec:
        enableAdminAPI: true
        walCompression: true
        replicas: 1
        replicaExternalLabelName: replica
        retention: 3h
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        remoteWrite:
          - url: http://thanos-receive.monitoring:19291/api/v1/receive
            basicAuth:
              username:
                name: thanos-secret
                key: username
              password:
                name: thanos-secret
                key: password
        volumes:
          - name: web-config-2
            secret:
              defaultMode: 0644
              secretName: prometheus-secret
          - name: etcd-client-cert
            hostPath:
              path: /system/secrets/etcd
        volumeMounts:
          - name: etcd-client-cert
            mountPath: /etc/prometheus/secrets/etcd-client-cert
            readOnly: true
        securityContext:
          runAsGroup: 60
          runAsUser: 60
          fsGroup: 60
        podMetadata:
          annotations:
            secret.reloader.stakater.com/reload: prometheus-secret
      ingress:
        enabled: true
        pathType: Prefix
        ingressClassName: traefik
        hosts:
          - prometheus.${DOMAIN}
        tls:
          - hosts:
              - prometheus.${DOMAIN}
    cleanPrometheusOperatorObjectNames: true
  valuesFrom:
    - kind: Secret
      name: prometheus-secret
      valuesKey: header
      targetPath: >-
        prometheus.prometheusSpec.containers[0].startupProbe.httpGet.httpHeaders[0].value
    - kind: Secret
      name: prometheus-secret
      valuesKey: header
      targetPath: >-
        prometheus.prometheusSpec.containers[0].livenessProbe.httpGet.httpHeaders[0].value
    - kind: Secret
      name: prometheus-secret
      valuesKey: header
      targetPath: >-
        prometheus.prometheusSpec.containers[0].readinessProbe.httpGet.httpHeaders[0].value
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: ServiceMonitor
              name: prometheus-prometheus
            patch:
              - op: add
                path: /spec/endpoints/0/basicAuth
                value:
                  username:
                    name: prometheus-secret
                    key: username
                  password:
                    name: prometheus-secret
                    key: password
          - target:
              kind: Prometheus
              name: prometheus
            patch:
              - op: add
                path: /spec/containers/0/name
                value: prometheus
              - op: add
                path: /spec/containers/0/startupProbe/httpGet/port
                value: http-web
              - op: add
                path: /spec/containers/0/startupProbe/httpGet/httpHeaders/0/name
                value: Authorization
              - op: add
                path: /spec/containers/0/livenessProbe/httpGet/port
                value: http-web
              - op: add
                path: /spec/containers/0/livenessProbe/httpGet/httpHeaders/0/name
                value: Authorization
              - op: add
                path: /spec/containers/0/readinessProbe/httpGet/port
                value: http-web
              - op: add
                path: /spec/containers/0/readinessProbe/httpGet/httpHeaders/0/name
                value: Authorization
              - op: add
                path: /spec/containers/0/volumeMounts
                value:
                  - name: web-config-2
                    mountPath: /etc/prometheus/web_config/web-config.yaml
                    subPath: web-config.yaml
