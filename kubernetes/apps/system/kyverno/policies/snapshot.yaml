---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: snapshot
  annotations:
    policies.kyverno.io/title: Snapshot
    policies.kyverno.io/subject: PersistentVolumeClaim
spec:
  rules:
    - name: snapshot-cronjob
      match:
        any:
          - resources:
              kinds:
                - PersistentVolumeClaim
              annotations:
                volume.kubernetes.io/storage-provisioner: rook-ceph.rbd.csi.ceph.com
      context:
        - name: name
          variable:
            jmesPath: request.object.metadata.name
        - name: namespace
          variable:
            jmesPath: request.object.metadata.namespace
        - name: appName
          variable:
            jmesPath: request.object.metadata.labels."app.kubernetes.io/name"
        - name: appInstance
          variable:
            jmesPath: request.object.metadata.labels."app.kubernetes.io/instance"
      generate:
        synchronize: true
        generateExisting: true
        apiVersion: batch/v1
        kind: CronJob
        name: "{{ name }}-snapshot"
        namespace: "{{ namespace }}"
        data:
          metadata:
            labels:
              app.kubernetes.io/name: "{{ appName }}"
              app.kubernetes.io/instance: "{{ appInstance }}"
            ownerReferences:
              - apiVersion: "{{ request.object.apiVersion }}"
                kind: "{{ request.object.kind }}"
                name: "{{ request.object.metadata.name }}"
                uid: "{{ request.object.metadata.uid }}"
          spec:
            schedule: 0 20 * * *
            suspend: false
            concurrencyPolicy: Forbid
            jobTemplate:
              spec:
                ttlSecondsAfterFinished: 3600
                template:
                  spec:
                    automountServiceAccountToken: false
                    restartPolicy: OnFailure
                    initContainers:
                      - name: wait
                        image: docker.io/library/alpine:3.20.3
                        args:
                          - /bin/sh
                          - -c
                          - sleep $(shuf -i 1-900 -n 1)
                    containers:
                      - name: backup
                        image: docker.io/kopia/kopia:0.17.0
                        env:
                          - name: KOPIA_CACHE_DIRECTORY
                            value: /backups/{{ namespace }}/{{ name }}/cache
                          - name: KOPIA_LOG_DIR
                            value: /backups/{{ namespace }}/{{ name }}/logs
                          - name: KOPIA_PASSWORD
                            value: none
                        command:
                          - /bin/sh
                        args:
                          - -c
                          - kopia repo connect filesystem --path=/backups
                            --override-hostname=cluster --override-username=root &&
                            kopia policy set /data/{{ namespace }}/{{ name }}
                            --compression=zstd --keep-latest 0 --keep-hourly 0
                            --keep-daily 7 --keep-weekly 0 --keep-monthly 0 --keep-annual 0 &&
                            fsfreeze -f /data/{{ namespace }}/{{ name }} &&
                            kopia snap create /data/{{ namespace }}/{{ name }} &&
                            fsfreeze -u /data/{{ namespace }}/{{ name }} &&
                            kopia snap list /data/{{ namespace }}/{{ name }} &&
                            kopia content stats &&
                            kopia maintenance info &&
                            kopia repo disconnect
                        securityContext:
                          privileged: true
                        volumeMounts:
                          - name: data
                            mountPath: /data/{{ namespace }}/{{ name }}
                          - name: backup
                            mountPath: /backups
                    volumes:
                      - name: data
                        persistentVolumeClaim:
                          claimName: "{{ name }}"
                      - name: backup
                        nfs:
                          server: ${GATEWAY_IP}
                          path: /mnt/md0/kopia
                    affinity:
                      podAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          - topologyKey: kubernetes.io/hostname
                            labelSelector:
                              matchLabels:
                                app.kubernetes.io/name: "{{ appName }}"
                                app.kubernetes.io/instance: "{{ appInstance }}"
